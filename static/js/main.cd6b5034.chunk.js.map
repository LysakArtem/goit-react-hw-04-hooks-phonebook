{"version":3,"sources":["components/AddContact.js","components/Filter.js","components/ContactList.js","App.js","index.js","components/ContactList.module.css","components/AddContacts.module.css"],"names":["AddContact","onSubmit","useState","name","setName","number","setNumber","handlerInputChange","e","currentTarget","value","className","s","formAddContact","preventDefault","trim","length","alert","id","uuidv4","addLable","inputFild","type","placeholder","onChange","Filter","filter","ContactList","contacts","contactsFiltered","onRemove","title","contactList","map","contactItem","button","onClick","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","contact","includes","data","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cd6b5034.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './AddContacts.module.css';\r\n\r\nexport default function AddContact({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handlerInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    }\r\n    if (name === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.trim().length <= 2 || number.trim().length <= 6) {\r\n      alert('Введите коректное значение');\r\n    } else {\r\n      onSubmit({ id: uuidv4(), name, number });\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook </h1>\r\n      <form className={s.formAddContact} onSubmit={handleSubmit}>\r\n        <label className={s.addLable}>\r\n          Name\r\n          <input\r\n            className={s.inputFild}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Введите имя\"\r\n            onChange={handlerInputChange}\r\n          ></input>\r\n        </label>\r\n        <label className={s.addLable}>\r\n          Number\r\n          <input\r\n            className={s.inputFild}\r\n            type=\"phone\"\r\n            name=\"number\"\r\n            placeholder=\"Введите номер\"\r\n            value={number}\r\n            onChange={handlerInputChange}\r\n          ></input>\r\n        </label>\r\n        <button className=\"add-contact-btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nAddContact.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <h3>Find contact by name</h3>\r\n      <input placeholder=\"Что ищем?\" onChange={onChange} value={filter} />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import Filter from './Filter';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nexport default function ContactList({\r\n  contacts,\r\n  contactsFiltered,\r\n  onRemove,\r\n  filter,\r\n  onChange,\r\n}) {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <div className={s.contacts}>\r\n      <h1 className={s.title}>Contacts</h1>\r\n      {contacts.length === 1 ? null : (\r\n        <Filter filter={filter} onChange={onChange} />\r\n      )}\r\n      {contactsFiltered.length !== 0 ? (\r\n        <ul className={s.contactList}>\r\n          {contactsFiltered.map(({ id, name, number }) => (\r\n            <li className={s.contactItem} key={id}>\r\n              <span className={s.name}>{name}: </span>\r\n              <span className={s.number}>{number}</span>\r\n              <button\r\n                type=\"button\"\r\n                className={s.button}\r\n                onClick={() => onRemove(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Такого контакта в списке нет!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  contactsFiltered: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport AddContact from './components/AddContact';\nimport ContactList from './components/ContactList';\n\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  // Варияант2\n  // const [contacts, setContacts] = useState(()=>\n  //   JSON.parse(localStorage.getItem('contacts')) ?? []\n  // );\n\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = (data) => {\n    setContacts((s) => [data, ...s]);\n  };\n\n  const handleRemove = (id) => {\n    setContacts((s) => s.filter((contact) => contact.id !== id));\n  };\n\n  const changeFilter = (e) => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return (\n    <div className=\"App\">\n      <AddContact onSubmit={formSubmitHandler} />\n\n      <ContactList\n        contacts={contacts}\n        contactsFiltered={filteredContacts}\n        onRemove={handleRemove}\n        filter={filter}\n        onChange={changeFilter}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3oR5M\",\"title\":\"ContactList_title__1GZFP\",\"contactList\":\"ContactList_contactList__7BfYK\",\"contactItem\":\"ContactList_contactItem__1k6Py\",\"name\":\"ContactList_name__Hw8lT\",\"number\":\"ContactList_number__15APQ\",\"button\":\"ContactList_button__21rjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAddContact\":\"AddContacts_formAddContact__2i7n9\",\"addLable\":\"AddContacts_addLable__3B4kH\",\"inputFild\":\"AddContacts_inputFild__3h4ib\"};"],"sourceRoot":""}